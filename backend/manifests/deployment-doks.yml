apiVersion: v1
kind: List
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: cs-backend-service
      namespace: ns-cs
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: cs-backend-service
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: cs-backend-service
        spec:
          containers:
            - name: cs-backend-service
              image: registry.digitalocean.com/first-project-doks-registry/cs-backend-service:7ed0f9696daf23b2d52525de2a4cc736187c818d
              imagePullPolicy: IfNotPresent
              env:
                - name: TZ
                  value: America/Sao_Paulo
              ports:
                - containerPort: 3000
                  protocol: TCP
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "250m"
                limits:
                  memory: "256Mi"
                  cpu: "500m"
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: cs-backend-secret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30

  - apiVersion: v1
    kind: Service
    metadata:
      name: cs-backend-service
      namespace: ns-cs
    spec:
      ports:
        - port: 3000
          protocol: TCP
          targetPort: 3000
      selector:
        app: cs-backend-service
      sessionAffinity: None
      type: ClusterIP

  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: cs-backend-service
      namespace: ns-cs
      annotations:
        kubernetes.io/ingress.class: traefik
        cert-manager.io/cluster-issuer: letsencrypt
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
    spec:
      ingressClassName: traefik
      rules:
        - host: api-cs.software
          http:
            paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: cs-backend-service
                    port:
                      number: 3000
      tls:
        - hosts:
            - api-cs.software
          secretName: cs-backend-tls-secret
