name: Pipeline Backend - Doks

on:
  push:
    branches:
      - homolog
    paths:
      - 'backend/**'
      - '.github/workflows/main.yml'

env:
  IMAGE_NAME: cs-backend-service
  TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend  # define onde rodar os comandos

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Instalar dependÃªncias
        run: npm ci

      - name: Build TypeScript
        run: npm run build

  build-and-push:
    name: Build and push homolog
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/homolog'
    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build container image
        run: docker build -t ${{ secrets.REGISTRY_NAME }}/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7) -f backend/Dockerfile backend

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        run: docker push ${{ secrets.REGISTRY_NAME }}/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7)

  deploy:
    name: Deploy to Doks
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/homolog'
    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Update image in deployment
        run: |
          doctl kubernetes cluster kubeconfig save ${{ secrets.DOKS_CLUSTER_NAME }}
          kubectl set image deployment/cs-backend-service cs-backend-service=${{ secrets.REGISTRY_NAME }}/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7) --namespace=ns-cs
