name: Pipeline frontend - Doks

on:
  push:
    branches:
      - homolog
    paths-ignore:
      - 'backend/**'
      - '.github/workflows/backend.yml'

env:
  CLUSTER_NAME: first-project-doks-cluster
  IMAGE_NAME: cs-frontend-service
  TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Instalar dependências
        run: npm ci

      - name: Build da aplicação
        run: npm run build

  build-and-push:
    name: Build and push homolog
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/homolog'
    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 1200

      - name: Build Docker image
        run: docker build -t registry.digitalocean.com/first-project-doks-registry/$IMAGE_NAME:$TAG -f frontend/Dockerfile frontend

      - name: Push Docker image
        run: docker push registry.digitalocean.com/first-project-doks-registry/$IMAGE_NAME:$TAG

  deploy:
    name: Deploy to Doks
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/homolog'
    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Update image in deployment
        run: |
          doctl kubernetes cluster kubeconfig save $CLUSTER_NAME
          kubectl set image deployment/cs-frontend-service cs-frontend-service=registry.digitalocean.com/first-project-doks-registry/$IMAGE_NAME:$TAG --namespace=ns-cs
